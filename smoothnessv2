getgenv().Delusion = {
    Silent = {
        ["Enabled"] = true,
        ["Part"] = "HumanoidRootPart",
        ["PredictionAmount"] = 0.119,
        ["NearestPoint"] = true
    },
    FOV = {
        ["Visible"] = true,
        ["Filled"] = false,
        ["Radius"] = 80,
        ["Rainbow"] = true
    },
    Resolver = {
        ["Enabled"] = true,
        ["AntiAimViewer"] = true,
        ["AntiGroundShots"] = true
    },
    Tracer = {
        ["Key"] = "C",
        ["Aimpart"] = "Head",
        ["Enabled"] = true,
        ["Prediction"] = 0.025,
        ["Smoothness"] = 0.0978334,
    },
    AutoSilentPrediction = {
        ["Enabled"] = false,
        ["Amount_150"] = 0.163,
        ["Amount_140"] = 0.132,
        ["Amount_130"] = 0.172,
        ["Amount_127"] = 0.127,
        ["Amount_135"] = 0.135,
        ["Amount_120"] = 0.133,
        ["Amount_110"] = 0.184,
        ["Amount_100"] = 0.145,
        ["Amount_90"] = 0.149,
        ["Amount_80"] = 0.139,
        ["Amount_70"] = 0.154,
        ["Amount_60"] = 0.196,
        ["Amount_50"] = 0.1227
    },
    Checks = {
        ["Wall_Check"] = true,
        ["Crew_Check"] = false
    }
}

if not game:IsLoaded() then
    game.Loaded:Wait()
end
local Players, Client, Mouse, RS, Camera =
    game:GetService("Players"),
    game:GetService("Players").LocalPlayer,
    game:GetService("Players").LocalPlayer:GetMouse(),
    game:GetService("RunService"),
    game.Workspace.CurrentCamera
local players = game:GetService("Players")
local mouse = game:GetService("Players").LocalPlayer:GetMouse()

local Circle = Drawing.new("Circle")
Circle.Color = Color3.new(1, 1, 1)
Circle.Thickness = 1
local UpdateFOV = function()
    if (not Circle) then
        return Circle
    end

    Circle.Visible = Delusion.FOV["Visible"]
    Circle.Filled = Delusion.FOV["Filled"]
    Circle.Radius = Delusion.FOV["Radius"] * 3
    Circle.Position = Vector2.new(Mouse.X, Mouse.Y + (game:GetService("GuiService"):GetGuiInset().Y))

    if Delusion.FOV.Rainbow == true then
        local hue = tick() % 5 / 5
        Circle.Color = Color3.fromHSV(hue, 1, 1)
    else
        Circle.Color = Color3.new(0, 255, 255)
    end

    return Circle
end

RS.Heartbeat:Connect(UpdateFOV)

ClosestPlrFromMouse = function()
    local Target, Closest = nil, 1 / 0

    for _, v in pairs(Players:GetPlayers()) do
        if (v.Character and v ~= Client and v.Character:FindFirstChild("HumanoidRootPart")) then
            local Position, OnScreen = Camera:WorldToScreenPoint(v.Character.HumanoidRootPart.Position)
            local Distance = (Vector2.new(Position.X, Position.Y) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude

            if (Circle.Radius > Distance and Distance < Closest and OnScreen) then
                Closest = Distance
                Target = v
            end
        end
    end
    return Target
end

local WTS = function(Object)
    local ObjectVector = Camera:WorldToScreenPoint(Object.Position)
    return Vector2.new(ObjectVector.X, ObjectVector.Y)
end

local IsOnScreen = function(Object)
    local IsOnScreen = Camera:WorldToScreenPoint(Object.Position)
    return IsOnScreen
end

local FilterObjs = function(Object)
    if string.find(Object.Name, "Gun") then
        return
    end
    if table.find({"Part", "MeshPart", "BasePart"}, Object.ClassName) then
        return true
    end
end

local GetClosestBodyPart = function(character)
    local ClosestDistance = 1 / 0
    local BodyPart = nil
    if (character and character:GetChildren()) then
        for _, x in next, character:GetChildren() do
            if FilterObjs(x) and IsOnScreen(x) then
                local Distance = (WTS(x) - Vector2.new(Mouse.X, Mouse.Y)).Magnitude
                if (Circle.Radius > Distance and Distance < ClosestDistance) then
                    ClosestDistance = Distance
                    BodyPart = x
                end
            end
        end
    end
    return BodyPart
end
local Prey

task.spawn(
    function()
        while task.wait() do
            if Prey then
                if Delusion.Silent.Enabled and Delusion.Silent.NearestPoint == true then
                    Delusion.Silent["Part"] = tostring(GetClosestBodyPart(Prey.Character))
                end
            end
        end
    end
)

local grmt = getrawmetatable(game)
local backupindex = grmt.__index
setreadonly(grmt, false)

grmt.__index =
    newcclosure(
    function(self, v)
        if (Delusion.Silent.Enabled and Mouse and tostring(v) == "Hit") then
            Prey = ClosestPlrFromMouse()

            if Prey then
                local endpoint =
                    game.Players[tostring(Prey)].Character[Delusion.Silent["Part"]].CFrame +
                    (game.Players[tostring(Prey)].Character[Delusion.Silent["Part"]].Velocity *
                        Delusion.Silent.PredictionAmount)
                return (tostring(v) == "Hit" and endpoint)
            end
        end
        return backupindex(self, v)
    end
)

if getgenv().Delusion.Resolver.AntiAimViewer == true then
    local d = 1000
    local bama = nil
    local vec2 = nil

    for _, player in pairs(players:GetPlayers()) do
        if
            player ~= players.LocalPlayer and player.Character and player.Character:FindFirstChild("Head") and
                player.Character:FindFirstChild("HumanoidRootPart")
         then
            local cam = workspace.CurrentCamera:WorldToViewportPoint(player.Character.PrimaryPart.Position)
            local vector = (Vector2.new(mouse.X, mouse.Y) - Vector2.new(cam.X, cam.Y)).Magnitude
            if vector > d then
                bama = player
                vec2 = vector
            end
        end
    end
    return bama
end
if
    getgenv().Delusion.Resolver.AntiGroundShots == true and
        Prey.Character:FindFirstChild("Humanoid") == Enum.HumanoidStateType.Freefall
 then
    pcall(
        function()
            local TargetVelv5 = targ.Character[getgenv().partlol]
            TargetVelv5.Velocity =
                Vector3.new(TargetVelv5.Velocity.X, (TargetVelv5.Velocity.Y * 5), TargetVelv5.Velocity.Z)
            TargetVelv5.AssemblyLinearVelocity =
                Vector3.new(TargetVelv5.Velocity.X, (TargetVelv5.Velocity.Y * 5), TargetVelv5.Velocity.Z)
        end
    )
end
if getgenv().Delusion.Resolver.Enabled == true then
    pcall(
        function()
            local TargetVelv2 = Prey.Character.HumanoidRootPart
            TargetVelv2.Velocity = Vector3.new(TargetVelv2.Velocity.X, 0, TargetVelv2.Velocity.Z)
            TargetVelv2.AssemblyLinearVelocity = Vector3.new(TargetVelv2.Velocity.X, 0, TargetVelv2.Velocity.Z)
        end
    )
end
if getgenv().Delusion.AutoSilentPrediction.Enabled == true then
    local pingvalue = game:GetService("Stats").Network.ServerStatsItem["Data Ping"]:GetValueString()
    local split = string.split(pingvalue, "(")
    local ping = tonumber(split[1])
    if ping < 150 then
        getgenv().Delusion.Silent.PredictionAmount = getgenv().Delusion.AutoSilentPrediction.Amount_150
    elseif ping < 140 then
        getgenv().Delusion.Silent.PredictionAmount = getgenv().Delusion.AutoSilentPrediction.Amount_140
    elseif ping < 130 then
        getgenv().Delusion.Silent.PredictionAmount = getgenv().Delusion.AutoSilentPrediction.Amount_130
    elseif ping < 120 then
        getgenv().Delusion.Silent.PredictionAmount = getgenv().Delusion.AutoSilentPrediction.Amount_120
    elseif ping < 110 then
        getgenv().Delusion.Silent.PredictionAmount = getgenv().Delusion.AutoSilentPrediction.Amount_110
    elseif ping < 100 then
        getgenv().Delusion.Silent.PredictionAmount = getgenv().Delusion.AutoSilentPrediction.Amount_100
    elseif ping < 90 then
        getgenv().Delusion.Silent.PredictionAmount = getgenv().Delusion.AutoSilentPrediction.Amount_90
    elseif ping < 80 then
        getgenv().Delusion.Silent.PredictionAmount = getgenv().Delusion.AutoSilentPrediction.Amount_80
    elseif ping < 70 then
        getgenv().Delusion.Silent.PredictionAmount = getgenv().Delusion.AutoSilentPrediction.Amount_70
    elseif ping < 60 then
        getgenv().Delusion.Silent.PredictionAmount = getgenv().Delusion.AutoSilentPrediction.Amount_60
    elseif ping < 50 then
        getgenv().Delusion.Silent.PredictionAmount = getgenv().Delusion.AutoSilentPrediction.Amount_50
    end
end
if getgenv().Delusion.Checks.Wall_Check then
    local Origin = Camera.CFrame.p
    local CheckRay = Ray.new(Origin, destination - Origin)
    local Hit = game.workspace:FindPartOnRayWithIgnoreList(CheckRay, ignore)
    return Hit == nil
else
    return true
end
if getgenv().Delusion.Checks.Crew_Check == true then
    while true do
        local newPlayer = game.Players.PlayerAdded:wait()
        if player:IsInGroup(newPlayer.Group) then
            table.insert(Ignored.Players, newPlayer)
        end
    end
end
Mouse.KeyDown:Connect(function(Key)
    local Keybind = getgenv().Delusion.Tracer.Key:lower()
    if (Key == Keybind) then
        if getgenv().Delusion.Tracer.Enabled == true then
            IsTargetting = not IsTargetting
            if IsTargetting then
                Plr = GetClosest()
            else
                if Plr ~= nil then
                    Plr = nil
                end
            end
        end
    end
end)
game.RunService.Heartbeat:Connect(function()
        if getgenv().Delusion.Misc.Shake then
            local Main = CFrame.new(Camera.CFrame.p,Plr.Character[Delusion.Tracer.Aimpart].Position + Plr.Character[Delusion.Tracer.Aimpart].Velocity * getgenv().Delusion.Tracer.Prediction +
            Vector3.new(
                math.random(-getgenv().Delusion.Misc.ShakeValue, getgenv().Delusion.Misc.ShakeValue),
                math.random(-getgenv().Delusion.Misc.ShakeValue, getgenv().Delusion.Misc.ShakeValue),
                math.random(-getgenv().Delusion.Misc.ShakeValue, getgenv().Delusion.Misc.ShakeValue)
            ) * 0.1)
            Camera.CFrame = Camera.CFrame:Lerp(Main, getgenv().Delusion.Tracer.Smoothness, Enum.EasingStyle.Elastic, Enum.EasingDirection.InOut, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
        else
            local Main = CFrame.new(Camera.CFrame.p,Plr.Character[getgenv().Delusion.Tracer.Aimpart].Position + Plr.Character[Delusion.Tracer.Aimpart].Velocity * getgenv().Delusion.Tracer.Prediction)
            Camera.CFrame = Camera.CFrame:Lerp(Main, getgenv().Delusion.Tracer.Smoothness, Enum.EasingStyle.Elastic, Enum.EasingDirection.InOut, Enum.EasingStyle.Sine, Enum.EasingDirection.Out)
        end
end)

task.spawn(function()
    while task.wait() do
        if getgenv().Delusion.Tracer.Enabled and Plr ~= nil and (Plr.Character) then
            getgenv().Delusion.Tracer.Aimpart = tostring(GetNearestPartToCursorOnCharacter(Plr.Character))
        end
    end
end)
